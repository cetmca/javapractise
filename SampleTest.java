package com.intvw.practise;

import java.awt.image.BufferedImage;
import java.io.UnsupportedEncodingException;
import java.util.Base64;
import java.util.Base64.Decoder;

public class SampleTest {
	
	public static String reverseString(String str)
	{
	int strlength=str.length();
	String revString="";
	for (int i=strlength-1;i>=0;i--)
	{
		revString += str.charAt(i);
	}
	return revString;			
	}
	

	
	
	public static void main(String args[]) throws UnsupportedEncodingException{ 
		Singleton x = Singleton.getInstance(); 
		Singleton y = Singleton.getInstance(); 
		System.out.println("---"+x.s+"\n---"+y.s);
		String revString="how to reverse each   string";
		revString=revString.replaceAll("\\s{2,}", " ").trim();
		String[] words = revString.split(" ");
		for (String word: words) {           
		    //Do your stuff here
		//    System.out.print(reverseString(word)+" "); 
		}
		try {
			int number=1234;
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		// item-descriptor="documents" / Value From tcc_documents.template Column
		// documentId to be matched with incoming request
		String  template="";
		//
		Base64.Decoder decoder = Base64.getDecoder();
        byte[] currentDecodedString = decoder.decode(template);
        String str = new String(currentDecodedString, "UTF-8");
     // this return the HTML which can be rendered in the browser / or converted to PDF.
        System.out.println("--HTML output -->>>"+str);   
        
		
		
		//
		
		
	}
	
}
